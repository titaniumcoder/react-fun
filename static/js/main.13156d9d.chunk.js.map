{"version":3,"sources":["input/InputRow.js","input/InputFields.js","game1/InputForm.js","useQuery.js","game1/Game1.js","house/HouseInputForm.js","house/House.js","house/HouseWinning.js","App.js","index.js"],"names":["InputField","no","value","setValue","Col","xs","Form","Label","srOnly","Control","type","onChange","values","noOfFields","length","inputFields","transformAndSetValue","e","i","parseInt","target","push","key","Row","InputFields","setInputValues","firstFieldInRow","inputRows","row","InputRow","slice","col","newValues","Jumbotron","className","InputForm","gamesValue","setGameValues","matchingCalc","FormControl","size","style","backgroundColor","useQuery","URLSearchParams","useLocation","search","Game1","inputValues","q","history","useHistory","hor","ver","useState","getAll","map","n","qcalc","useMemo","delete","forEach","gv","append","sort","toString","useEffect","indexOf","missingHorizontal","vals","missing","filter","vn","win","cols","missingVertical","currentCol","Container","v","mnh","unneeded","inputForms","HouseInputForm","line","lines","setLines","replaceLine","House","line1","line2","line3","noValues","readFromSearchParam","currentWinning","remaining","l","x","winningClass","HouseWinning","setWinning","Card","App","Math","random","replace","substr","reloadkey","t","setTimeout","clearTimeout","fluid","Button","variant","onClick","preventDefault","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAGMA,EAAa,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAKC,MAAN,CAAYC,QAAM,GAAlB,aAA8BP,GAC9B,kBAACK,EAAA,EAAKG,QAAN,CAAcC,KAAK,SAASR,MAAOA,EAAOS,SAAUR,MAKjD,cAUX,IAVoC,IAAvBS,EAAsB,EAAtBA,OAAQT,EAAc,EAAdA,SACfU,EAAaD,EAAOE,OAEpBC,EAAc,GAEdC,EAAuB,SAACC,EAAGC,GAC7B,IAAMhB,EAAQiB,SAASF,EAAEG,OAAOlB,OAChCC,EAASe,EAAGhB,IAPmB,WAU1BgB,GACLH,EAAYM,KAAK,kBAAC,EAAD,CAAYpB,GAAIiB,EAAGI,IAAKJ,EAAGhB,MAAOU,EAAOM,GAAIf,SAAU,SAACc,GAAD,OAAOD,EAAqBC,EAAGC,QADlGA,EAAI,EAAGA,EAAIL,EAAYK,IAAM,EAA7BA,GAIT,OACI,kBAACZ,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKiB,IAAN,KACI,kBAACnB,EAAA,EAAD,CAAKC,IAAI,IAELU,EAEJ,kBAACX,EAAA,EAAD,CAAKC,IAAI,O,QCCVmB,MA9Bf,YAaI,IAb4C,IAA1BZ,EAAyB,EAAzBA,OAAQa,EAAiB,EAAjBA,eACpBC,EAAkB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAUxDC,EAAY,GAXyB,WAalCT,GAJQ,IAACU,EAKdD,EAAUN,KACN,kBAACQ,EAAD,CAAUP,IAAKJ,EAAGN,QANRgB,EAMyBV,EAN1B,YAAaN,EAAOkB,MAAMJ,EAAgBE,GAAMF,EAAgBE,EAAM,MAMxCzB,SAAU,SAAC4B,EAAK7B,GAAN,OAZxC,SAAC0B,EAAKG,EAAK7B,GACxB,IAAM8B,EAAS,YAAOpB,GACtBoB,EAAUN,EAAgBE,GAAOG,GAAO7B,EACxCuB,EAAeO,GASsD7B,CAASe,EAAGa,EAAK7B,QAFjFgB,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAMT,OACI,kBAACe,EAAA,EAAD,KACI,6BACKN,EAAUG,MAAM,EAAG,GACpB,yBAAKI,UAAU,yBACdP,EAAUG,MAAM,M,QCNlBK,EAnBG,SAAC,GAAD,IAAElC,EAAF,EAAEA,GAAImC,EAAN,EAAMA,WAAYC,EAAlB,EAAkBA,cAAeC,EAAjC,EAAiCA,aAAjC,OACd,kBAAClC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACkC,EAAA,EAAD,CACIrC,MAAOkC,EAAWnC,GAClBuC,KAAK,KACL7B,SAAU,SAACM,GACP,IAAMf,EAAQiB,SAASF,EAAEG,OAAOlB,OAEhCmC,EAAc,GAAD,mBAEDD,EAAWN,MAAM,EAAG7B,IAFnB,CAGLC,GAHK,YAIDkC,EAAWN,MAAM7B,EAAK,OAGtCwC,MAAO,CAACC,gBAAiBJ,EAAarC,GAAM,QAAU,e,OChBnD,SAAS0C,IACpB,OAAO,IAAIC,gBAAgBC,cAAcC,QC+H9BC,MA5Hf,YAA+B,IAAfC,EAAc,EAAdA,YACNC,EAAIN,IACJO,EAAUC,cAMVC,EAAM,CACR,CAAC,GAAI,CAAC,EAAG,IACT,CAAC,GAAI,CAAC,EAAG,EAAG,EAAG,IACf,CAAC,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,KACvB,CAAC,IAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpC,CAAC,IAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAC9C,CAAC,IAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpC,CAAC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAC3B,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,KAClB,CAAC,GAAI,CAAC,GAAI,MAERC,EAAM,CACR,CAAC,EAAG,CAAC,KACL,CAAC,GAAI,CAAC,GAAI,GAAI,KACd,CAAC,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,KACtB,CAAC,IAAK,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,KAC7B,CAAC,IAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KACtC,CAAC,IAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KACtC,CAAC,IAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAC/B,CAAC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,KACvB,CAAC,GAAI,CAAC,GAAI,GAAI,KACd,CAAC,GAAI,CAAC,MA7BgB,EA+BUC,oBAAS,kBACzCL,EAAEM,OAAO,MAAMzC,OA3BRmC,EAAEM,OAAO,MAAMC,KAAI,SAAAC,GAAC,OAAItC,SAASsC,MA4BZ,CACpB,EACA,EAAG,EAAG,EACN,EAAG,EAAG,EAAG,EAAG,EAAG,EACf,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EACf,EAAG,EAAG,EACN,MA3Cc,mBA+BnBrB,EA/BmB,KA+BPC,EA/BO,KA8CpBqB,EAAQC,mBAAQ,WAOlB,OANIvB,IACAa,EAAEW,OAAO,MACTxB,EAAWyB,SAAQ,SAAAC,GAAE,OAAIb,EAAEc,OAAO,KAAMD,MACxCb,EAAEe,QAGCf,EAAEgB,aACV,CAAC7B,EAAYa,IAEhBiB,qBAAU,WAGN,OAFAhB,EAAQ7B,KAAK,IAAMqC,GAEZ,eAER,CAACA,EAAOR,IAEX,IAAMZ,EAAeqB,mBACjB,kBAAMvB,EAAWoB,KAAI,SAAAM,GAAE,OAAIA,EAAK,GAAKd,EAAYmB,QAAQL,IAAO,OAChE,CAAC1B,EAAYY,IAGXoB,EAAoBT,mBACtB,kBAAMP,EAAII,KAAI,SAAAa,GAAI,MAAK,CACnBC,QAASD,EAAK,GAAGE,QAAO,SAAAC,GAAE,OAAKlC,EAAakC,MAAK1D,OACjD2D,IAAKJ,EAAK,GACVK,KAAML,EAAK,GAAGvD,aAElB,CAACwB,EAAcc,IAGbuB,EAAkBhB,mBACpB,kBAAMN,EAAIG,KAAI,SAAAa,GAAI,MAAK,CAACC,QAASD,EAAK,GAAGE,QAAO,SAAAC,GAAE,OAAKlC,EAAakC,MAAK1D,OAAQ2D,IAAKJ,EAAK,SAC3F,CAAC/B,EAAce,IAGfuB,EAAa,EAEjB,OACI,kBAAC3C,EAAA,EAAD,KACI,kBAAC4C,EAAA,EAAD,KACI,kBAACtD,EAAA,EAAD,CAAKW,UAAU,sBACX,kBAAC9B,EAAA,EAAD,CAAKC,GAAI,GAAG,kCAERsE,EAAgBnB,KAAI,SAAAsB,GAAC,OACjB,kBAAC1E,EAAA,EAAD,CAAKkB,IAAKwD,EAAEL,IAAKpE,GAAI,EAChB6B,UAAW,gBAAiC,IAAd4C,EAAER,QAAiB,wBAA0B,KAAMQ,EAAEL,IAAI,6BAAK,+BAAQK,EAAER,cAItHF,EAAkBZ,KAAI,SAAAuB,GAInB,IAHA,IAAML,EAAOK,EAAIL,KACXM,GAAY,GAAKN,GAAQ,EACzBO,EAAa,GACV/D,EAAI,EAAGA,EAAIwD,EAAMxD,IACtB+D,EAAW5D,KACP,kBAAC,EAAD,CAAWC,IAAKsD,EAAY3E,GAAI2E,IAAcxC,WAAYA,EAC/CE,aAAcA,EACdD,cAAeA,KAGlC,OACI,kBAACd,EAAA,EAAD,CAAKW,UAAU,qBAAqBZ,IAAKyD,EAAIN,KACzC,kBAACrE,EAAA,EAAD,CAAKC,GAAI,EACJ6B,UAAW,gBAAmC,IAAhB6C,EAAIT,QAAiB,wBAA0B,KAAMS,EAAIN,IAD5F,OAEI,mCAASM,EAAIT,QAAb,QAEDU,GAAY,kBAAC5E,EAAA,EAAD,CAAKC,GAAI2E,IACvBC,IACED,GAAY,kBAAC5E,EAAA,EAAD,CAAKC,GAAI2E,W,QC9FrCE,EAxBQ,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,KAAMpD,EAAwC,EAAxCA,IAAKqD,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAU/C,EAAkB,EAAlBA,aAC3CgD,EAAc,SAACrE,GAAD,4BAERmE,EAAMD,GAAMrD,MAAM,EAAGC,IAFb,CAGZZ,SAASF,EAAEG,OAAOlB,QAHN,YAIRkF,EAAMD,GAAMrD,MAAMC,EAAM,MAIpC,OAAO,kBAAC3B,EAAA,EAAD,KACH,kBAACmC,EAAA,EAAD,CACIC,KAAK,KACLtC,MAAOkF,EAAMD,GAAMpD,GACnBpB,SAAU,SAACM,GAAD,OAAOoE,EAAS,GAAD,mBAEbD,EAAMtD,MAAM,EAAGqD,IAFF,CAGjBG,EAAYrE,IAHK,YAIbmE,EAAMtD,MAAMqD,EAAO,OAE/B1C,MAAO,CAACC,gBAAiBJ,EAAa6C,GAAMpD,GAAO,QAAU,eCoF1DwD,MApGf,YAAwD,IAAxCtF,EAAuC,EAAvCA,GAAIuF,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAO1C,EAAc,EAAdA,YAC/BC,EAAIN,IACJO,EAAUC,cAFmC,EAUzBG,oBAAS,kBAC/BL,EAAEM,OAAO,IAAMtD,GAAIa,OAPK,WACxB,IACM6E,EADe1C,EAAEM,OAAO,IAAMtD,GACNuD,KAAI,SAAAC,GAAC,OAAItC,SAASsC,MAChD,MAAO,CAACkC,EAAS7D,MAAM,EAAG,GAAI6D,EAAS7D,MAAM,EAAG,IAAK6D,EAAS7D,MAAM,GAAI,KAKpE8D,GACA,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,OAhB0B,mBAU5CR,EAV4C,KAUrCC,EAVqC,KAmB7CQ,EAAiBlC,mBAAQ,WAC3B,IAAMmC,EAAYV,EAAMb,QAAO,SAAAwB,GAAC,OAAIA,EAAExB,QAAO,SAAAO,GAAC,OAAU,IAANA,IAAuC,IAA5B9B,EAAYmB,QAAQW,MAAWhE,OAAS,KAAGA,OACxG,OAAkB,IAAdgF,EACQ,CAACV,MAAO,EAAGX,IAAK,GAEV,IAAdqB,EACQ,CAACV,MAAO,EAAGX,IAAKe,GAEV,IAAdM,EACQ,CAACV,MAAO,EAAGX,IAAKgB,GAEpB,CAACL,MAAO,EAAGX,IAAKiB,KACzB,CAACF,EAAOC,EAAOC,EAAO1C,EAAaoC,IAEhC9C,EAAeqB,mBAAQ,kBACrByB,EAAM5B,KAAI,SAAA2B,GAAI,OACVA,EAAK3B,KAAI,SAAAM,GAAE,OAAIA,EAAK,GAAKd,EAAYmB,QAAQL,IAAO,UAE5D,CAACsB,EAAOpC,IAGNU,EAAQC,mBAAQ,WASlB,OARAV,EAAEW,OAAO,IAAM3D,GACfmF,EAAMvB,SAAQ,SAAAsB,GAAI,OACdA,EAAKtB,SAAQ,SAAAmC,GAAC,OACV/C,EAAEc,OAAO,IAAM9D,EAAI+F,SAG3B/C,EAAEe,OAEKf,EAAEgB,aACV,CAACmB,EAAOnC,EAAGhD,IAEdiE,qBAAU,WAGN,OAFAhB,EAAQ7B,KAAK,IAAMqC,GAEZ,eAER,CAACA,EAAOR,IAEX,IAAM+C,EAAe,CACjB,aACA,oCACA,uCACA,wCAGJ,OACI,kBAAC1E,EAAA,EAAD,KACI,kBAACnB,EAAA,EAAD,CAAKC,GAAI,GACL,qCAAWJ,GACX,yBAAKiC,UAAW+D,EAAaJ,EAAeT,QAA5C,UAA4DS,EAAeT,OAC3E,yBAAKlD,UAAW+D,EAAaJ,EAAeT,QAA5C,QAA0DS,EAAepB,MAE7E,kBAACrE,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACkB,EAAA,EAAD,KACI,kBAAC,EAAD,CAAgB4D,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,KAEzF,kBAAC9D,EAAA,EAAD,KACI,kBAAC,EAAD,CAAgB4D,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,KAEzF,kBAAC9D,EAAA,EAAD,KACI,kBAAC,EAAD,CAAgB4D,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,IACrF,kBAAC,EAAD,CAAgBF,KAAM,EAAGpD,IAAK,EAAGO,aAAcA,EAAc8C,MAAOA,EAAOC,SAAUA,QC1C1Fa,EArDM,SAAC,GAAD,IAAEC,EAAF,EAAEA,WAAYnD,EAAd,EAAcA,YAAd,OACjB,kBAACoD,EAAA,EAAD,KACI,kBAAC,EAAD,CAAOnG,GAAI,EACJuF,MAAO,GACPC,MAAO,IACPC,MAAO,IACPS,WAAYA,EACZnD,YAAaA,IACpB,yBAAKd,UAAU,yBACf,kBAAC,EAAD,CAAOjC,GAAI,EACJuF,MAAO,GACPC,MAAO,IACPC,MAAO,IACPS,WAAYA,EACZnD,YAAaA,IACpB,yBAAKd,UAAU,yBACf,kBAAC,EAAD,CAAOjC,GAAI,EACJuF,MAAO,GACPC,MAAO,IACPC,MAAO,IACPS,WAAYA,EACZnD,YAAaA,IACpB,yBAAKd,UAAU,yBACf,kBAAC,EAAD,CAAOjC,GAAI,EACJuF,MAAO,GACPC,MAAO,IACPC,MAAO,IACPS,WAAYA,EACZnD,YAAaA,IACpB,yBAAKd,UAAU,yBACf,kBAAC,EAAD,CAAOjC,GAAI,EACJuF,MAAO,GACPC,MAAO,IACPC,MAAO,IACPS,WAAYA,EACZnD,YAAaA,IACpB,yBAAKd,UAAU,yBACf,kBAAC,EAAD,CAAOjC,GAAI,EACJuF,MAAO,GACPC,MAAO,GACPC,MAAO,IACPS,WAAYA,EACZnD,YAAaA,IACpB,yBAAKd,UAAU,yBACf,kBAAC,EAAD,CAAOjC,GAAI,EACJuF,MAAO,GACPC,MAAO,GACPC,MAAO,IACPS,WAAYA,EACZnD,YAAaA,MC2BbqD,MAnEf,WACI,IAAMpD,EAAIN,IACJO,EAAUC,cAFL,GAGMN,cAIiBS,oBAAS,kBAFhBgD,KAAKC,SAAStC,SAAS,IAAIuC,QAAQ,WAAY,IAAIC,OAAO,EAAG,OAL7E,mBAOJC,EAPI,aAS2BpD,oBAAS,kBAC3CL,EAAEM,OAAO,MAAMzC,OACXmC,EAAEM,OAAO,MAAMC,KAAI,SAAAwC,GAAC,OAAI7E,SAAS6E,MAAM,CACnC,EACA,EAAG,EAAG,EACN,EAAG,EAAG,EAAG,EAAG,EAAG,EACf,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EACf,EAAG,EAAG,EACN,OArBD,mBASJhD,EATI,KASSvB,EATT,KAyBLiC,EAAQC,mBAAQ,WAIlB,OAHAV,EAAEW,OAAO,MACTZ,EAAYa,SAAQ,SAAAiB,GAAC,OAAI7B,EAAEc,OAAO,KAAMe,MACxC7B,EAAEe,OACKf,EAAEgB,aACV,CAACjB,EAAaC,IAcjB,OAZAiB,qBAAU,WACN,IAAMyC,EAAIC,YACN,WACI1D,EAAQsD,QAAQ,IAAM9C,KAE1B,KAEJ,OAAO,WACHmD,aAAaF,MAElB,CAACjD,EAAOR,IAGP,kBAAC2B,EAAA,EAAD,CAAWiC,OAAK,EAACxF,IAAKoF,GAClB,kBAACnF,EAAA,EAAD,CAAKW,UAAU,mBACX,kBAAC9B,EAAA,EAAD,KACI,kBAAC,EAAD,CAAc4C,YAAaA,IAC3B,yBAAKd,UAAU,yBACf,kBAAC,EAAD,CAAOc,YAAaA,KAExB,kBAAC5C,EAAA,EAAD,KACI,kBAAC,EAAD,CAAaqB,eAAgBA,EAAgBb,OAAQoC,IACrD,yBAAKd,UAAU,8BACX,kBAAC6E,EAAA,EAAD,CAAQvE,KAAK,KAAKwE,QAAQ,OAAOC,QAAS,SAAChG,GACvCA,EAAEiG,iBACFhE,EAAQ7B,KAAK,MACbuF,YAAW,kBAAMO,OAAOC,SAASC,WAAU,KAH/C,c,QC/DxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,QAGRC,SAASC,eAAe,W","file":"static/js/main.13156d9d.chunk.js","sourcesContent":["import React from \"react\";\nimport {Col, Form} from \"react-bootstrap\";\n\nconst InputField = ({no, value, setValue}) => {\n    return (\n        <Col xs={1}>\n            <Form.Label srOnly>Field for {no}</Form.Label>\n            <Form.Control type=\"number\" value={value} onChange={setValue}/>\n        </Col>\n    )\n}\n\nexport default ({values, setValue}) => {\n    const noOfFields = values.length;\n\n    const inputFields = [];\n\n    const transformAndSetValue = (e, i) => {\n        const value = parseInt(e.target.value);\n        setValue(i, value);\n    }\n\n    for (let i = 0; i < noOfFields; i++) {\n        inputFields.push(<InputField no={i} key={i} value={values[i]} setValue={(e) => transformAndSetValue(e, i)}/>);\n    }\n\n    return (\n        <Form>\n            <Form.Row>\n                <Col xs={true}/>\n                {\n                    inputFields\n                }\n                <Col xs={true}/>\n            </Form.Row>\n        </Form>\n    )\n}","import React from \"react\";\nimport InputRow from \"./InputRow\";\nimport {Jumbotron} from \"react-bootstrap\";\n\nfunction InputFields({values, setInputValues}) {\n    const firstFieldInRow = [0, 1, 4, 10, 17, 25, 33, 40, 46, 49, 50];\n\n    const setValue = (row, col, value) => {\n        const newValues = [...values];\n        newValues[firstFieldInRow[row] + col] = value;\n        setInputValues(newValues);\n    }\n\n    const inValues = (row) => [...values.slice(firstFieldInRow[row], firstFieldInRow[row + 1])];\n\n    const inputRows = []\n\n    for (let i = 0; i < 10; i++) {\n        inputRows.push(\n            <InputRow key={i} values={inValues(i)} setValue={(col, value) => setValue(i, col, value)}/>\n        )\n    }\n\n    return (\n        <Jumbotron>\n            <div>\n                {inputRows.slice(0, 5)}\n                <div className=\"border-top mt-3 mb-3\"/>\n                {inputRows.slice(5)}\n            </div>\n        </Jumbotron>\n    )\n}\n\nexport default InputFields;\n","import React from \"react\";\nimport {Col, FormControl} from \"react-bootstrap\";\n\nconst InputForm = ({no, gamesValue, setGameValues, matchingCalc}) =>\n    <Col xs={1}>\n        <FormControl\n            value={gamesValue[no]}\n            size=\"sm\"\n            onChange={(e) => {\n                const value = parseInt(e.target.value);\n\n                setGameValues(\n                    [\n                        ...(gamesValue.slice(0, no)),\n                        value,\n                        ...(gamesValue.slice(no + 1))\n                    ]);\n            }}\n            style={{backgroundColor: matchingCalc[no] ? 'white' : '#ffbf00'}}\n        />\n    </Col>\n\nexport default InputForm;\n","import {useLocation} from \"react-router-dom\";\n\nexport default function useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport {Col, Container, Jumbotron, Row} from \"react-bootstrap\";\nimport InputForm from \"./InputForm\";\nimport useQuery from \"../useQuery\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction Game1({inputValues}) {\n    const q = useQuery();\n    const history = useHistory();\n\n    const readFromSearchParam = () => {\n        return q.getAll('g1').map(n => parseInt(n));\n    }\n\n    const hor = [\n        [20, [0, 1]],\n        [40, [2, 3, 4, 5]],\n        [300, [6, 7, 8, 9, 10, 11]],\n        [2000, [12, 13, 14, 15, 16, 17, 18, 19]],\n        [100000, [20, 21, 22, 23, 24, 25, 26, 27, 28, 29]],\n        [5000, [30, 31, 32, 33, 34, 35, 36, 37]],\n        [250, [38, 39, 40, 41, 42, 43]],\n        [50, [44, 45, 46, 47]],\n        [15, [48, 49]],\n    ]\n    const ver = [\n        [5, [20,]],\n        [25, [12, 21, 30,]],\n        [100, [6, 13, 22, 31, 38,]],\n        [500, [2, 7, 14, 23, 32, 39, 44,]],\n        [10000, [0, 3, 8, 15, 24, 33, 40, 45, 48]],\n        [20000, [1, 4, 9, 16, 25, 34, 41, 46, 49]],\n        [1000, [5, 10, 17, 26, 35, 42, 47,]],\n        [200, [11, 18, 27, 36, 43,]],\n        [30, [19, 28, 37,]],\n        [10, [29,]],\n    ]\n    const [gamesValue, setGameValues] = useState(() =>\n        q.getAll('g1').length ?\n            readFromSearchParam() : [\n                0,\n                0, 0, 0,\n                0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0,\n                0, 0, 0,\n                0\n            ]);\n\n    const qcalc = useMemo(() => {\n        if (gamesValue) {\n            q.delete('g1');\n            gamesValue.forEach(gv => q.append('g1', gv))\n            q.sort();\n        }\n\n        return q.toString();\n    }, [gamesValue, q]);\n\n    useEffect(() => {\n        history.push('?' + qcalc);\n\n        return () => {\n        };\n    }, [qcalc, history]);\n\n    const matchingCalc = useMemo(\n        () => gamesValue.map(gv => gv > 0 && inputValues.indexOf(gv) >= 0),\n        [gamesValue, inputValues]\n    );\n\n    const missingHorizontal = useMemo(\n        () => hor.map(vals => ({\n            missing: vals[1].filter(vn => !matchingCalc[vn]).length,\n            win: vals[0],\n            cols: vals[1].length\n        })),\n        [matchingCalc, hor]\n    )\n\n    const missingVertical = useMemo(\n        () => ver.map(vals => ({missing: vals[1].filter(vn => !matchingCalc[vn]).length, win: vals[0]})),\n        [matchingCalc, ver]\n    )\n\n    let currentCol = 0;\n\n    return (\n        <Jumbotron>\n            <Container>\n                <Row className=\"align-items-center\">\n                    <Col xs={2}><b>G1</b></Col>\n                    {\n                        missingVertical.map(v => (\n                            <Col key={v.win} xs={1}\n                                 className={\"text-center \" + ((v.missing === 0) ? \"font-weight-bold mark\" : \"\")}>{v.win}<br/><small>{v.missing}</small></Col>\n                        ))\n                    }\n                </Row>\n                {missingHorizontal.map(mnh => {\n                    const cols = mnh.cols;\n                    const unneeded = (10 - cols) / 2;\n                    const inputForms = [];\n                    for (let i = 0; i < cols; i++) {\n                        inputForms.push(\n                            <InputForm key={currentCol} no={currentCol++} gamesValue={gamesValue}\n                                       matchingCalc={matchingCalc}\n                                       setGameValues={setGameValues}/>\n                        )\n                    }\n                    return (\n                        <Row className=\"align-items-center\" key={mnh.win}>\n                            <Col xs={2}\n                                 className={\"text-center \" + ((mnh.missing === 0) ? \"font-weight-bold mark\" : \"\")}>{mnh.win}&nbsp;\n                                <small>({mnh.missing})</small></Col>\n\n                            {!!unneeded && <Col xs={unneeded}/>}\n                            {inputForms}\n                            {!!unneeded && <Col xs={unneeded}/>}\n                        </Row>\n                    );\n                })}\n            </Container>\n        </Jumbotron>\n    )\n}\n\nexport default Game1;\n","import {Col, FormControl} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst HouseInputForm = ({line, col, lines, setLines, matchingCalc}) => {\n    const replaceLine = (e) => (\n        [\n            ...(lines[line].slice(0, col)),\n            parseInt(e.target.value),\n            ...(lines[line].slice(col + 1)),\n        ]\n    );\n\n    return <Col>\n        <FormControl\n            size=\"sm\"\n            value={lines[line][col]}\n            onChange={(e) => setLines(\n                [\n                    ...(lines.slice(0, line)),\n                    replaceLine(e),\n                    ...(lines.slice(line + 1))\n                ])}\n            style={{backgroundColor: matchingCalc[line][col] ? 'white' : '#ffbf00'}}\n        />\n    </Col>;\n}\n\nexport default HouseInputForm;","import React, {useEffect, useMemo, useState} from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport HouseInputForm from \"./HouseInputForm\";\nimport useQuery from \"../useQuery\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction House({no, line1, line2, line3, inputValues}) {\n    const q = useQuery();\n    const history = useHistory();\n\n    const readFromSearchParam = () => {\n        const singleValues = q.getAll('h' + no);\n        const noValues = singleValues.map(n => parseInt(n));\n        return [noValues.slice(0, 5), noValues.slice(5, 10), noValues.slice(10, 15)];\n    }\n\n    const [lines, setLines] = useState(() =>\n        q.getAll('h' + no).length ?\n            readFromSearchParam() :\n            [\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0]\n            ]);\n\n    const currentWinning = useMemo(() => {\n        const remaining = lines.filter(l => l.filter(v => v === 0 || inputValues.indexOf(v) === -1).length > 0).length\n        if (remaining === 3) {\n            return ({lines: 0, win: 0});\n        }\n        if (remaining === 2) {\n            return ({lines: 1, win: line1});\n        }\n        if (remaining === 1) {\n            return ({lines: 2, win: line2});\n        }\n        return ({lines: 3, win: line3});\n    }, [line1, line2, line3, inputValues, lines]);\n\n    const matchingCalc = useMemo(() =>\n            lines.map(line =>\n                line.map(gv => gv > 0 && inputValues.indexOf(gv) >= 0)\n            ),\n        [lines, inputValues]\n    );\n\n    const qcalc = useMemo(() => {\n        q.delete('h' + no);\n        lines.forEach(line =>\n            line.forEach(x =>\n                q.append('h' + no, x)\n            )\n        )\n        q.sort();\n\n        return q.toString();\n    }, [lines, q, no]);\n\n    useEffect(() => {\n        history.push('?' + qcalc);\n\n        return () => {\n        };\n    }, [qcalc, history]);\n\n    const winningClass = [\n        \"text-muted\",\n        \"font-weight-bold badge badge-info\",\n        \"font-weight-bold badge badge-primary\",\n        \"font-weight-bold badge badge-success\"\n    ]\n\n    return (\n        <Row>\n            <Col xs={3}>\n                <h4>Spiel {no}</h4>\n                <div className={winningClass[currentWinning.lines]}>Lines: {currentWinning.lines}</div>\n                <div className={winningClass[currentWinning.lines]}>Win: {currentWinning.win}</div>\n            </Col>\n            <Col xs={9}>\n                <Row>\n                    <HouseInputForm line={0} col={0} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={0} col={1} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={0} col={2} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={0} col={3} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={0} col={4} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                </Row>\n                <Row>\n                    <HouseInputForm line={1} col={0} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={1} col={1} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={1} col={2} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={1} col={3} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={1} col={4} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                </Row>\n                <Row>\n                    <HouseInputForm line={2} col={0} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={2} col={1} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={2} col={2} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={2} col={3} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                    <HouseInputForm line={2} col={4} matchingCalc={matchingCalc} lines={lines} setLines={setLines}/>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default House;\n","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport House from \"./House\";\n\nconst HouseWinning = ({setWinning, inputValues}) => (\n    <Card>\n        <House no={2}\n               line1={20}\n               line2={100}\n               line3={2000000}\n               setWinning={setWinning}\n               inputValues={inputValues}/>\n        <div className=\"mt-1 mb-1 border-top\"/>\n        <House no={3}\n               line1={10}\n               line2={200}\n               line3={300000}\n               setWinning={setWinning}\n               inputValues={inputValues}/>\n        <div className=\"mt-1 mb-1 border-top\"/>\n        <House no={4}\n               line1={10}\n               line2={200}\n               line3={100000}\n               setWinning={setWinning}\n               inputValues={inputValues}/>\n        <div className=\"mt-1 mb-1 border-top\"/>\n        <House no={5}\n               line1={25}\n               line2={100}\n               line3={50000}\n               setWinning={setWinning}\n               inputValues={inputValues}/>\n        <div className=\"mt-1 mb-1 border-top\"/>\n        <House no={6}\n               line1={10}\n               line2={125}\n               line3={40000}\n               setWinning={setWinning}\n               inputValues={inputValues}/>\n        <div className=\"mt-1 mb-1 border-top\"/>\n        <House no={7}\n               line1={10}\n               line2={50}\n               line3={20000}\n               setWinning={setWinning}\n               inputValues={inputValues}/>\n        <div className=\"mt-1 mb-1 border-top\"/>\n        <House no={8}\n               line1={10}\n               line2={30}\n               line3={10000}\n               setWinning={setWinning}\n               inputValues={inputValues}/>\n    </Card>\n);\n\nexport default HouseWinning;\n","import React, {useEffect, useMemo, useState} from 'react';\n\nimport './App.scss';\n\nimport {Button, Col, Container, Row} from 'react-bootstrap';\n\nimport InputFields from \"./input/InputFields\";\nimport Game1 from \"./game1/Game1\";\nimport HouseWinning from \"./house/HouseWinning\";\nimport useQuery from \"./useQuery\";\n\nimport {useHistory, useLocation} from 'react-router-dom';\n\nfunction App() {\n    const q = useQuery();\n    const history = useHistory();\n    const location = useLocation();\n\n    const randomNumber = () => Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 7);\n\n    const [reloadkey, setReloadkey] = useState(() => randomNumber());\n\n    const [inputValues, setInputValues] = useState(() =>\n        q.getAll('iv').length ?\n            q.getAll('iv').map(x => parseInt(x)) : [\n                0,\n                0, 0, 0,\n                0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0,\n                0, 0, 0,\n                0\n            ]\n    );\n\n    const qcalc = useMemo(() => {\n        q.delete('iv');\n        inputValues.forEach(v => q.append('iv', v));\n        q.sort();\n        return q.toString();\n    }, [inputValues, q]);\n\n    useEffect(() => {\n        const t = setTimeout(\n            () => {\n                history.replace('?' + qcalc);\n            },\n            500)\n\n        return () => {\n            clearTimeout(t);\n        };\n    }, [qcalc, history]);\n\n    return (\n        <Container fluid key={reloadkey}>\n            <Row className=\"border-top mt-2\">\n                <Col>\n                    <HouseWinning inputValues={inputValues}/>\n                    <div className=\"mt-3 pt-3 border-top\"/>\n                    <Game1 inputValues={inputValues}/>\n                </Col>\n                <Col>\n                    <InputFields setInputValues={setInputValues} values={inputValues}/>\n                    <div className=\"mt-5 border-top text-right\">\n                        <Button size=\"lg\" variant=\"dark\" onClick={(e) => {\n                            e.preventDefault();\n                            history.push('/?');\n                            setTimeout(() => window.location.reload(), 0);\n                        }}>Reset</Button>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n          <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}